<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.douzone.rest.sadeductpay.dao.SaDeductPayDao">

    <!-- 사원별 공제항목 조회 -->
    <select id="getSaDeductPayByCdEmp" parameterType="java.util.Map" resultType="SaDeductPay">
        SELECT
            d.CD_DEDUCT
            , d.NM_DEDUCT
            , p.ALLOW_PAY
            , p.CD_EMP , p.DATE_ID
        FROM SADEDUCT d LEFT OUTER JOIN SADEDUCTPAY p
            ON d.CD_DEDUCT = p.CD_DEDUCT
            AND p.DATE_ID = #{dateId}
            AND p.CD_EMP = #{cdEmp}
        <if test="cdDeduct                    != null"> AND s.CD_DEDUCT = #{cdDeduct} </if>
    </select>

    <!-- 합계 데이터 조회-->
    <select id="getSalDeductPaySum"  parameterType="java.util.Map" resultType="map">
        SELECT
            d.CD_DEDUCT AS "cdDeduct"
            , (SELECT s.NM_DEDUCT FROM SADEDUCT s WHERE s.CD_DEDUCT = d.CD_DEDUCT) AS "nmDeduct"
            , TO_CHAR(sum(p.ALLOW_PAY)) AS "sumDeductPay"
        FROM SADEDUCT d LEFT OUTER JOIN SADEDUCTPAY p
            ON p.CD_DEDUCT = d.CD_DEDUCT LEFT OUTER JOIN "DATE" d
            ON p.DATE_ID = d.DATE_ID LEFT OUTER JOIN EMP e
            ON e.CD_EMP = p.CD_EMP
        WHERE 1=1
            <if test="paymentDateFlag ==  'true'">
                AND d."DATE" = #{paymentDate}
                <if test="nowFlag ==  'true'">
                    AND (e.DA_RETIRE IS NULL OR e.DA_RETIRE &lt; #{paymentDate})
                </if>
            </if>
            <if test="allowMonthFlag ==  'true'">
                AND d."MONTH" = #{allowMonth}
                <if test="nowFlag ==  'true'">
                    AND (e.DA_RETIRE IS NULL OR TO_DATE(e.DA_RETIRE, 'YYYY-MM-DD') &lt; TO_DATE( #{allowMonth}, 'YYYY-MM'))
                </if>
            </if>
            <if test="allowYearFlag  ==  'true'">
                AND d.ALLOW_YEAR = #{allowYear}
                <if test="nowFlag  == 'true'">
                    AND (e.DA_RETIRE IS NULL OR TO_DATE(e.DA_RETIRE, 'YYYY') &lt; TO_DATE( #{allowYear}, 'YYYY'))
                </if>
            </if>
        GROUP BY d.CD_DEDUCT
    </select>

    <!-- 모달_공제항목등록 급여항목 리스트 -->
    <select id="getsalDeductList" parameterType="java.util.Map" resultType="hashmap">
        SELECT
            CD_DEDUCT AS "cdDeduct",
            NM_DEDUCT AS "nmDeduct",
            YN_BONUS AS "ynBonus",
            YN_SAL AS "ynSal",
            RATE AS "rate",
            STATIC AS "static",
            CASE WHEN CD_DEDUCT = 'DEDUCT_INCOME' OR CD_DEDUCT = 'DEDUCT_LOCALINCOME' THEN RATE ELSE '과세합계 *' || RATE END AS "calculation"
        FROM SADEDUCT
        <if test="static != null">
            WHERE STATIC = #{static}
        </if>
        ORDER BY CD_DEDUCT
    </select>

    <update id="mergeSaDeductPayList" parameterType="list">
        MERGE INTO SADEDUCTPAY target
        USING (
        <foreach collection="list" item="item" separator="UNION ALL">
            SELECT #{item.cdDeduct} AS CD_DEDUCT,
                #{item.cdEmp} AS CD_EMP,
                #{item.dateId} AS DATE_ID,
                #{item.allowPay} AS ALLOW_PAY
            FROM dual
        </foreach>
        ) source
        ON (target.CD_DEDUCT = source.CD_DEDUCT
            AND target.CD_EMP = source.CD_EMP
            AND target.DATE_ID = source.DATE_ID)
        WHEN MATCHED THEN
            UPDATE SET target.ALLOW_PAY = source.ALLOW_PAY
        WHEN NOT MATCHED THEN
            INSERT (CD_DEDUCT, CD_EMP, DATE_ID, ALLOW_PAY)
            VALUES (source.CD_DEDUCT, source.CD_EMP, source.DATE_ID, source.ALLOW_PAY)
    </update>

    <update id="mergeSalDeductPay" parameterType="SaDeductPay">
        MERGE INTO SADEDUCTPAY target
        USING (
            SELECT CD_DEDUCT, DATE_ID, CD_EMP, ALLOW_PAY
            FROM SADEDUCTPAY
            WHERE CD_DEDUCT = #{cdDeduct}
            AND DATE_ID = #{dateId}
            AND CD_EMP = #{cdEmp}
            AND ALLOW_PAY = #{allowPay}
        ) source
        ON (target.CD_DEDUCT = source.CD_DEDUCT
        AND target.DATE_ID = source.DATE_ID
        AND target.CD_EMP = source.CD_EMP
        )
        WHEN MATCHED THEN
        UPDATE SET target.ALLOW_PAY = source.ALLOW_PAY
        WHEN NOT MATCHED THEN
        INSERT (CD_DEDUCT, DATE_ID, CD_EMP,  ALLOW_PAY)
        VALUES (source.CD_DEDUCT, source.DATE_ID, source.CD_EMP, source.ALLOW_PAY)
    </update>

    <insert id="insertSaDeduct" parameterType="SaDeductPay">
        INSERT INTO SADEDUCT (CD_DEDUCT, NM_DEDUCT, YN_BONUS, YN_SAL, RATE, STATIC)
        VALUES (
            SALARYDEDUCT_SEQ.nextval, #{nmDeduct}, #{ynBonus}, #{ynSal}, #{rate}, 'N'
        )
    </insert>

    <update id = "updateSaDeduct" parameterType="SaDeductPay">
        UPDATE SADEDUCT
        <set>
            <if test="nmDeduct != null">NM_DEDUCT = #{nmDeduct},</if>
            <if test="ynBonus != null">YN_BONUS = #{ynBonus},</if>
            <if test="ynSal != null">YN_SAL = #{ynSal},</if>
            <if test="rate != null">RATE = #{rate},</if>
        </set>
        WHERE CD_DEDUCT = #{cdDeduct}
    </update>

    <delete id="deleteSaDeduct" parameterType="SaDeductPay">
        DELETE FROM SADEDUCT
        WHERE CD_DEDUCT = #{cdDeduct}
    </delete>

    <insert id ="insertSaDeductPay" parameterType="SaDeductPay">
        INSERT INTO SADEDUCTPAY (CD_DEDUCT, DATE_ID, CD_EMP,  ALLOW_PAY)
        VALUES (#{cdDeduct}, #{dateId}, #{cdEmp}, #{allowPay})
    </insert>

    <update id ="updateSaDeductPay" parameterType="SaDeductPay">
        UPDATE SADEDUCTPAY
        SET ALLOW_PAY = #{allowPay}
        WHERE CD_DEDUCT = #{cdDeduct}
        AND DATE_ID = #{dateId}
        AND CD_EMP = #{cdEmp}
    </update>

    <delete id ="deleteSaDeductPay" parameterType="SaDeductPay">
        DELETE FROM SADEDUCTPAY
        WHERE CD_DEDUCT = #{cdDeduct}
        AND DATE_ID = #{dateId}
        AND CD_EMP = #{cdEmp}
    </delete>

    <select id="getCountSaDeductPay" parameterType="SaDeductPay" resultType="int">
        SELECT COUNT(*)
        FROM SADEDUCTPAY
        WHERE CD_DEDUCT = #{cdDeduct}
        AND DATE_ID = #{dateId}
        AND CD_EMP = #{cdEmp}
    </select>
</mapper>