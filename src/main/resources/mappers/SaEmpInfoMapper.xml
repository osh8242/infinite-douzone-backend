<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.douzone.rest.saempinfo.dao.SaEmpInfoMapper">

    <select id="getDateId" parameterType="java.util.Map" resultType="String">
        SELECT DATE_ID
            FROM "DATE"
        WHERE ALLOW_YEAR = #{allowYear}
            AND "MONTH"=#{allowMonth}
            AND "DATE"=#{paymentDate}
    </select>

    <select id="getSaEmpInfoList" parameterType="java.util.Map" resultType="SaEmpInfo">
        SELECT e.CD_EMP
            , e.NM_KRNAME AS "NM_EMP"
            , i.RANK_NO
            , i.MN_REDUCTION
        FROM EMP e LEFT OUTER JOIN SAEMPINFO i
            ON e.CD_EMP = i.CD_EMP LEFT OUTER JOIN EMP_PAYROLL_CRITERIA c
            ON e.CD_EMP = c.CD_EMP LEFT OUTER JOIN "DATE" d
        ON c.ALLOW_MONTH = d."MONTH"
        AND d.DATE_ID = #{dateId}
        <if test="searchCdEmp       != null and searchCdEmp       != ''">   AND i.CD_EMP       = #{searchCdEmp}      </if>
        <if test="searchCdDept      != null and searchCdDept      != ''">   AND i.CD_DEPT      = #{searchCdDept}     </if>
        <if test="searchRankNo      != null and searchRankNo      != ''">   AND i.RANK_NO      = #{searchRankNo}     </if>
        <if test="searchCdOccup     != null and searchCdOccup     != ''">   AND i.CD_OCCUP     = #{searchCdOccup}    </if>
        <if test="searchYnUnit      != null and searchYnUnit      != ''">   AND i.YN_UNIT      = #{searchYnUnit}     </if>
        <if test="searchYnForlabor  != null and searchYnForlabor  != ''">   AND i.YN_FORLABOR  = #{searchYnForlabor} </if>
    </select>
    <select id="getSaEmpInfoByCdEmp" parameterType="java.util.Map" resultType="SaEmpInfo">
        SELECT e.CD_EMP
            , e.NM_KRNAME AS "NM_EMP"
            , i.CD_DEPT
            , i.CD_FIELD
            , i.CD_PROJECT
            , i.CD_OCCUP
            , i.YN_FORLABOR
            , i.YN_OVERWORK
            , i.YN_MATEDED
            , i.DA_ENTER
            , i.YN_RESIDENT
            , i.YN_UNIT
            , i.NO_SOCIAL
            , i.NUM_20FAMILY
            , i.NUM_60FAMILY
            , i.NUM_MANYFAMILY
            , c.WORKDAY
            , c.OVERTIME
            , c.HOURLYWAGE
            , (c.WORKDAY * 8) + c.OVERTIME AS "allowMonthWorktime"
            , i.DA_RETIRE
            , i.NUM_20FAMILY
            , i.NUM_60FAMILY
            , i.NUM_MANYFAMILY
            , i.YN_UNIT
            , i.YN_FORLABOR
            , i.MN_REDUCTION
        FROM EMP e LEFT OUTER JOIN SAEMPINFO i
            ON e.CD_EMP = i.CD_EMP LEFT OUTER JOIN EMP_PAYROLL_CRITERIA c
            ON e.CD_EMP = c.CD_EMP LEFT OUTER JOIN "DATE" d
            ON c.ALLOW_MONTH = d."MONTH"
        AND d.DATE_ID = #{dateId}
        WHERE e.CD_EMP  = #{cdEmp}
        <if test="searchCdDept      != null and searchCdDept      != ''">   AND i.CD_DEPT      = #{searchCdDept}     </if>
        <if test="searchRankNo      != null and searchRankNo      != ''">   AND i.RANK_NO      = #{searchRankNo}     </if>
        <if test="searchCdOccup     != null and searchCdOccup     != ''">   AND i.CD_OCCUP     = #{searchCdOccup}    </if>
        <if test="searchYnUnit      != null and searchYnUnit      != ''">   AND i.YN_UNIT      = #{searchYnUnit}     </if>
        <if test="searchYnForlabor  != null and searchYnForlabor  != ''">   AND i.YN_FORLABOR  = #{searchYnForlabor} </if>
    </select>

    <update id="updateSaEmpInfo" parameterType="SaEmpInfo">
        UPDATE SAEMPINFO
        <set>
            <if test="mn111                    != null">, MN_1_1_1 = #{mn111}</if>
            <if test="daEnter                  != null">, DA_ENTER = #{daEnter}</if>
            <if test="ynMateDed                != null">, YN_MATEDED = #{ynMateDed}</if>
            <if test="num20Family              != null">, NUM_20FAMILY = #{num20Family}</if>
            <if test="num60Family              != null">, NUM_60FAMILY = #{num60Family}</if>
            <if test="numManyFamily            != null">, NUM_MANYFAMILY = #{numManyFamily}</if>
            <if test="ynResident               != null">, YN_RESIDENT = #{ynResident}</if>
            <if test="ynUnit                   != null">, YN_UNIT = #{ynUnit}</if>
            <if test="ynForLabor               != null">, YN_FORLABOR = #{ynForLabor}</if>
            <if test="ynOverwork               != null">, YN_OVERWORK = #{ynOverwork}</if>
            <if test="cdOccup                  != null">, CD_OCCUP = #{cdOccup}</if>
            <if test="rankNo                   != null">, RANK_NO = #{rankNo}</if>
            <if test="cdDept                   != null">, CD_DEPT = #{cdDept}</if>
            <if test="cdField                  != null">, CD_FIELD = #{cdField}</if>
            <if test="cdProject                != null">, CD_PROJECT = #{cdProject}</if>
            <if test="amNationPen              != null">, AM_NATIONPEN = #{amNationPen}</if>
            <if test="amHealthInsur            != null">, AM_HEALTHINSUR = #{amHealthInsur}</if>
            <if test="mn211                    != null">, MN_2_1_1 = #{mn211}</if>
            <if test="noSocial                 != null">, NO_SOCIAL = #{noSocial}</if>
        </set>
        WHERE CD_EMP = #{cdEmp}
    </update>

    <delete id="deleteSaAllowPayEmpList" parameterType="list">
        DELETE FROM SAALLOWPAY
        WHERE (CD_EMP, DATE_ID) IN (
        <foreach collection="list" item="param" open="(" separator="),(" close=")">
            #{param.cdEmp}, #{param.dateId}
        </foreach>
        )
    </delete>

    <delete id="deleteSaDeductEmpList" parameterType="list">
        DELETE FROM SADEDUCTPAY
        WHERE (CD_EMP, DATE_ID) IN (
        <foreach collection="list" item="param" open="(" separator="),(" close=")">
            #{param.cdEmp}, #{param.dateId}
        </foreach>
        )
    </delete>

</mapper>